name: Test Suite

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run comprehensive unit tests
      run: |
        python test_runner.py --type unit --coverage --verbose
    
    - name: Run comprehensive integration tests
      run: |
        python test_runner.py --type integration --verbose
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  test-modules:
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        module: [loadcell, mpu, bmp]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run ${{ matrix.module }} comprehensive tests
      run: |
        python test_runner.py --module ${{ matrix.module }} --coverage --verbose
    
    - name: Run ${{ matrix.module }} simplified tests
      run: |
        python test_runner.py --module ${{ matrix.module }} --simple --coverage --verbose

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install linting dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort mypy
        pip install -r requirements.txt
    
    - name: Run flake8
      run: |
        flake8 src/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
    
    - name: Run black check
      run: |
        black --check src/ tests/
    
    - name: Run isort check
      run: |
        isort --check-only src/ tests/
    
    - name: Run mypy
      run: |
        mypy src/ --ignore-missing-imports

  test-simplified:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run all simplified tests
      run: |
        python test_runner.py --simple --coverage --verbose
    
    - name: Run simplified unit tests only
      run: |
        python test_runner.py --simple --type unit --verbose

  test-hardware:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run hardware tests (if any)
      run: |
        python test_runner.py --hardware --verbose
      continue-on-error: true
